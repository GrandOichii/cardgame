{
	"card": {
		"scope": "json",
		"prefix": "card",
		"description": "create card body",
		"body": [
			"{",
			"\t\"name\": \"$1\",",
			"\t\"type\": \"$2\",",
			"\t\"text\": \"$3\",",
			"\t\"script\": \"script.lua\",",
			"",
			"\t\"summoned\": \"${4:false}\",",
			"\t\"refCards\": [",
			"\t\t$0",
			"\t]",
			"}"
		]
	},
	"spell": {
		"scope": "lua",
		"prefix": "spell",
		"body": [
			"function _CreateCard(props)",
			"\tprops.cost = $1",
			"",
			"\tlocal result = CardCreation:Spell(props)",
			"\t$2",
			"",
			"\tresult.EffectP:AddLayer(",
			"\t\tfunction (player)",
			"\t\t\t$0",
			"\t\t\treturn nil, true",
			"\t\tend",
			"\t)",
			"",
			"\treturn result",
			"end"
		],
		"description": "create script for spell card"
	},

	"unit": {
		"scope": "lua",
		"prefix": "unit",
		"body": [
			"function _CreateCard(props)",
			"\tprops.cost = $1",
			"\tprops.power = $2",
			"\tprops.life = $3",
			"",
			"\tlocal result = CardCreation:Unit(props)",
			"\t",
			"\t$0",
			"\t",
			"\treturn result",
			"end"
		],
		"description": "create script for spell card"
	},
	
	"treasure": {
		"scope": "lua",
		"prefix": "treasure",
		"body": [
			"function _CreateCard(props)",
			"\tprops.cost = $1",
			"\tprops.life = $2",
			"",
			"\tlocal result = CardCreation:Treasure(props)",
			"\t",
			"\t$0",
			"\t",
			"\treturn result",
			"end"
		],
		"description": "create script for spell card"
	},

	"on turn start": {
		"scope": "lua",
		"prefix": "onturnstart",
		"description": "on the start of your turn",
		"body": [
			"result.triggers[#result.triggers+1] = EffectCreation:TriggerBuilder()",
			"\t:Check(Common:IsOwnersTurn(result))",
			"\t:Cost(${1:Common:NoCost()})",
			"\t:IsSilent(false)",
			"\t:On(TRIGGERS.TURN_START)",
			"\t:Zone(ZONES.${2:UNITS})",
			"\t:Effect(function (player, args)",
			"\t\t$0",
			"\tend)",
			"\t:Build()"
		]
	},

	"on leave play": {
		"scope": "lua",
		"prefix": "onleave",
		"description": "on leaving play",
		"body": [
			"result.LeavePlayP:AddLayer(",
			"\tfunction (player)",
			"\t\t$0",
			"\t\treturn nil, true",
			"\tend",
			")"
		]
	},
	
	"mutable": {
		"scope": "lua",
		"prefix": "mut",
		"body": [
			"${1:result}.mutable.$2 = {",
			"\tmin = $3,",
			"\tcurrent = $4,",
			"\tmax = $0",
			"}"
		],
		"description": "create a mutable value"
	},

	"on enter unit": {
		"scope": "lua",
		"prefix": "onenter",
		"body": [
			"${1:result}.OnEnterP:AddLayer(",
			"\tfunction (player)",
			"\t\t$0",
			"\t\treturn nil, true",
			"\tend",
			")"
		],
		"description": "unit on enter play trigger"
	},
	
	"can play card": {
		"scope": "lua",
		"prefix": "canplay",
		"body": [
			"result.CanPlayP:AddLayer(",
			"\tfunction (player)",
			"\t\treturn nil, $0",
			"\tend",
			")",
		],
		"description": "unit on enter play trigger"
	},

	"trigger": {
		"scope": "lua",
		"prefix": "trigger",
		"body": [
			"result.triggers[#result.triggers+1] = EffectCreation:TriggerBuilder()",
			"\t:Check($1)",
			"\t:IsSilent(${2:false})",
			"\t:On(TRIGGERS.$3)",
			"\t:Zone(ZONES.$4)",
			"\t:Cost($5)",
			"\t:Effect(function ($6)",
			"\t\t$0",
			"\tend)",
			":Build()"
	
		],
		"description": "triggered effect"
	},

	"power modifier": {
		"scope": "lua",
		"prefix": "powermod",
		"description": "add a power modifier while in play",
		"body": [
			"local powerLayerID = nil",
			"result.OnEnterP:AddLayer(",
			"\tfunction (player)",
			"\t\tpowerLayerID = result.id",
			"\t\tPowerP:AddLayer(function( card )",
			"\t\t\tlocal add = 0",
			"\t\t\tlocal myCID = player.id",
			"\t\t\tlocal otherCID = GetController(card.id).id",
			"\t\t\tif ${1:card.id ~= result.id and otherCID == myCID} then",
			"\t\t\t\tadd = ${2:1}",
			"\t\t\tend",
			"\t\t\treturn add, true",
			"\t\tend, powerLayerID)",
			"\t\treturn nil, true",
			"\tend",
			")",
			"result.LeavePlayP:AddLayer(",
			"\tfunction (player)",
			"\t\tPowerP:RemoveWithID(powerLayerID)",
			"\t\treturn nil, true",
			"\tend",
			")",

		]
	}
}