target: 100
0|0|-1 -> 0|33.3|-1
0|0|-1 -> 0|33.3|-1
0|0|-1 -> 0|33.3|-1

target: 100
0|0|20 -> 0|33.3|20 -> 0|20|20
0|0|-1 -> 0|33.3|-1 -> 0|40|-1
0|0|-1 -> 0|33.3|-1 -> 0|40|-1

target: 100
0|0|20 -> 0|33.3|20 -> 0|20|20
0|0|-1 -> 0|33.3|-1 -> 0|60|-1
0|0|20 -> 0|33.3|20 -> 0|20|20

target: 100
 0|0|20 ->  0|50|20 ->  0|20|20
30|0|-1 -> 30|50|-1 -> 30|80|-1

target: 100
 0|0|20 ->  0|50|20 ->  0|40|20 ->  0|20|20
60|0|-1 -> 60|50|-1 -> 60|60|-1 -> 60|80|-1

target:100
 0|0|10 ->  0|25|10 ->  0|10|10 ->  0|10|10
 0|0|27 ->  0|25|27 ->  0|30|27 ->  0|27|27
 0|0|40 ->  0|25|40 ->  0|30|40 ->  0|31.5|40
 0|0|40 ->  0|25|40 ->  0|30|40 ->  0|31.5|40

target: 100
60|0|-1 -> 40|25|-1 -> 40|40|-1
 0|0|-1 ->  0|25|-1 ->  0|30|-1
 0|0|-1 ->  0|25|-1 ->  0|30|-1
 0|0|-1 ->  0|25|-1 ->  0|30|-1

target: 100
70|0|-1 -> 70|25|-1 -> 70|70|-1 -> 70|71|-1
16|0|-1 -> 16|25|-1 -> 16|16|-1 -> 16|17|-1
 0|0|10 ->  0|25|10 ->  0| 7| 4 ->  0| 4| 4
 0|0|-1 ->  0|25|-1 ->  0| 7|-1 ->  0| 5|-1



1. split the sizes between all the widgets
2. using min size of each widget, redistribute the remaining sizes
    2.1 add to all widgets, values of which are lesser than the min value, the required amount
    2.2 sum the amount added
    2.3 for each other widget, spread the values between them
3. using the max size of each widget, redistribute the remaining sizes
    3.1 find the widgets, sizes of which are greater than the max
    3.2 subtract the amount of each to get to max
    3.3 sum the total subtraction
    3.4 while left to add:
        3.3 find the widget, whoose size is closest to the max size
        3.4 calculate the difference
        3.5 calculate the distribution
        3.6 if difference >= distribution
            3.6.1 add the difference to each widget (who can)
            
        3.5 subtract 

add: 20

80|-1
90|95

s: 5